{"version":3,"sources":["../../src/runtimes/index.js"],"names":["require","exec","ruby","nodejs","python","Runtimes","plugin","runtime","service","provider","patterns","env","test","_runtime","log","process","exit","isCompatibleVersion","then","data","isCompatible","error","version","replace","cmd","Promise","resolve","reject","err","stdout","out","inboundSettings","packagePath","console","warn","dependenciesPath","commands","hasDependencesChanged","module","exports"],"mappings":";;;;;;;;;;;;;;eAAiBA,OAAO,CAAC,eAAD,C;IAAhBC,I,YAAAA,I;;AAER,IAAMC,IAAI,GAAGF,OAAO,CAAC,QAAD,CAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;IAEMK,Q;;;AACJ,oBAAYC,MAAZ,EAAoB;AAAA;;AAAA;AAClB,SAAKA,MAAL,GAAcA,MAAd;AADkB,QAGVC,OAHU,GAGE,KAAKD,MAAL,CAAYE,OAAZ,CAAoBC,QAHtB,CAGVF,OAHU;AAKlB,QAAMG,QAAQ,GAAG;AACfN,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAWA,MAAX,CADO;AAEfD,MAAAA,MAAM,EAAE,CAAC,MAAD,EAASA,MAAT,CAFO;AAGfD,MAAAA,IAAI,EAAE,CAAC,MAAD,EAASA,IAAT;AAHS,KAAjB;;AAMA,SAAK,IAAMS,GAAX,IAAkBD,QAAlB,EAA4B;AAC1B,UAAIA,QAAQ,CAACC,GAAD,CAAR,CAAc,CAAd,EAAiBC,IAAjB,CAAsBL,OAAtB,CAAJ,EAAoC;AAClC,aAAKM,QAAL,GAAgB,IAAIH,QAAQ,CAACC,GAAD,CAAR,CAAc,CAAd,CAAJ,CAAqB,IAArB,EAA2BJ,OAA3B,EAAoCI,GAApC,CAAhB;AACA;AACD;AACF;;AAED,QAAI,CAAC,KAAKE,QAAV,EAAoB;AAClB,WAAKP,MAAL,CAAYQ,GAAZ,aAAoBP,OAApB;AACAQ,MAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD;;AAED,SAAKH,QAAL,CAAcI,mBAAd,CAAkCV,OAAlC,EAA2CW,IAA3C,CAAgD,UAACC,IAAD,EAAU;AACxD,UAAI,CAACA,IAAI,CAACC,YAAV,EAAwB;AACtB,QAAA,KAAI,CAACd,MAAL,CAAYe,KAAZ,CAAkB,+DAAlB;;AACA,QAAA,KAAI,CAACf,MAAL,CAAYe,KAAZ,8DAAwEF,IAAI,CAACG,OAAL,CAAaC,OAAb,CAAqB,IAArB,EAA2B,EAA3B,CAAxE;;AACA,QAAA,KAAI,CAACjB,MAAL,CAAYe,KAAZ,CAAkB,iEAAlB;AACD;AACF,KAND;AAOD;;;;wBAEGG,G,EAAK;AACP,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC1B,QAAAA,IAAI,CAACuB,GAAD,EAAM,UAACI,GAAD,EAAMC,MAAN,EAAcC,GAAd,EAAsB;AAC9B,cAAIF,GAAJ,EAAS,OAAOD,MAAM,CAACC,GAAD,CAAb;AACT,iBAAOF,OAAO,CAACG,MAAM,IAAIC,GAAX,CAAd;AACD,SAHG,CAAJ;AAID,OALM,CAAP;AAMD;;;yCAEwC;AAAA,UAAtBC,eAAsB,uEAAJ,EAAI;;AACvC,UAAIA,eAAe,CAACC,WAApB,EAAiC;AAC/BC,QAAAA,OAAO,CAACC,IAAR,CAAa,uFAAb;AACAH,QAAAA,eAAe,CAACI,gBAAhB,GAAmCJ,eAAe,CAACC,WAAnD;AACD;;AACD,+BAAY,KAAKnB,QAAL,WAAZ,MAAsCkB,eAAtC;AACD;;;kCAEa;AACZ,aAAO,KAAKlB,QAAL,CAAcuB,QAArB;AACD;;;4CAEuB;AACtB,aAAO,KAAKvB,QAAL,CAAcwB,qBAAd,EAAP;AACD;;;;;AAGHC,MAAM,CAACC,OAAP,GAAiBlC,QAAjB","sourcesContent":["const { exec } = require('child_process');\n\nconst ruby = require('./ruby');\nconst nodejs = require('./nodejs');\nconst python = require('./python');\n\nclass Runtimes {\n  constructor(plugin) {\n    this.plugin = plugin;\n\n    const { runtime } = this.plugin.service.provider;\n\n    const patterns = {\n      python: [/python/, python],\n      nodejs: [/node/, nodejs],\n      ruby: [/ruby/, ruby],\n    };\n\n    for (const env in patterns) {\n      if (patterns[env][0].test(runtime)) {\n        this._runtime = new patterns[env][1](this, runtime, env);\n        break;\n      }\n    }\n\n    if (!this._runtime) {\n      this.plugin.log(`\"${runtime}\" is not supported (yet).`);\n      process.exit(1);\n    }\n\n    this._runtime.isCompatibleVersion(runtime).then((data) => {\n      if (!data.isCompatible) {\n        this.plugin.error('=============================================================');\n        this.plugin.error(`NOTE: You're currently using incompatible version [${data.version.replace('\\n', '')}]`);\n        this.plugin.error('=============================================================\\n');\n      }\n    });\n  }\n\n  run(cmd) {\n    return new Promise((resolve, reject) => {\n      exec(cmd, (err, stdout, out) => {\n        if (err) return reject(err);\n        return resolve(stdout || out);\n      });\n    });\n  }\n\n  getDefaultSettings(inboundSettings = {}) {\n    if (inboundSettings.packagePath) {\n      console.warn('WARN You should use \"dependenciesPath\" instead of the deprecated \"packagePath\" param.');\n      inboundSettings.dependenciesPath = inboundSettings.packagePath;\n    }\n    return { ...this._runtime.default, ...inboundSettings };\n  }\n\n  getCommands() {\n    return this._runtime.commands;\n  }\n\n  hasDependencesChanged() {\n    return this._runtime.hasDependencesChanged();\n  }\n}\n\nmodule.exports = Runtimes;\n"],"file":"index.js"}